class MemoryPtr:
    @property
    def size(self) -> int: ...
    def __init__(self, size: int = 0) -> None: ...
    def allocate(self, bytes: int) -> None: ...
    def deallocate(self) -> None: ...
    def write_int(self, value: int, offset: int = 0) -> None: ...
    def write_float(self, value: float, offset: int = 0) -> None: ...
    def write_double(self, value: float, offset: int = 0) -> None: ...
    def write_char(self, value: str, offset: int = 0) -> None: ...
    def read_int(self, offset: int = 0) -> int: ...
    def read_float(self, offset: int = 0) -> float: ...
    def read_double(self, offset: int = 0) -> float: ...
    def read_char(self, offset: int = 0) -> str: ...
    def copy(self, copy_to: 'MemoryPtr') -> None: ...